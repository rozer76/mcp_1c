#Область ПрограммныйИнтерфейс

// Выполняет инструмент из таблицы инструментов
//
// Параметры:
//  СтрокаТаблицыИнструментов - СтрокаТаблицыЗначений - строка таблицы инструментов
//  Параметры - Структура - параметры для выполнения инструмента
//
// Возвращаемое значение:
//  Произвольный - результат выполнения инструмента
//
Функция ВыполнитьИнструмент(СтрокаТаблицыИнструментов, Параметры) Экспорт
	
	ИмяОбработки = СтрокаТаблицыИнструментов.ИмяОбработкиКонтейнера;
	ИмяИнструмента = СтрокаТаблицыИнструментов.Имя;
	
	МенеджерОбработки = Обработки[ИмяОбработки];
	
	Возврат МенеджерОбработки.ВыполнитьИнструмент(ИмяИнструмента, Параметры);
	
КонецФункции

// Читает ресурс из таблицы ресурсов
//
// Параметры:
//  СтрокаТаблицыРесурсов - СтрокаТаблицыЗначений - строка таблицы ресурсов
//  Адрес - Строка - адрес ресурса
//
// Возвращаемое значение:
//  Произвольный - содержимое ресурса
//
Функция ПрочитатьРесурс(СтрокаТаблицыРесурсов, Адрес) Экспорт
	
	ИмяОбработки = СтрокаТаблицыРесурсов.ИмяОбработкиКонтейнера;
	
	МенеджерОбработки = Обработки[ИмяОбработки];
	
	Возврат МенеджерОбработки.ПрочитатьРесурс(Адрес);
	
КонецФункции

// Получает промпт из таблицы промптов
//
// Параметры:
//  СтрокаТаблицыПромптов - СтрокаТаблицыЗначений - строка таблицы промптов
//  Имя - Строка - имя промпта
//  Параметры - Структура - параметры для получения промпта
//
// Возвращаемое значение:
//  Произвольный - содержимое промпта
//
Функция ПолучитьПромпт(СтрокаТаблицыПромптов, Имя, Параметры) Экспорт
	
	ИмяОбработки = СтрокаТаблицыПромптов.ИмяОбработкиКонтейнера;
	ИмяПромпта = СтрокаТаблицыПромптов.Имя;
	
	МенеджерОбработки = Обработки[ИмяОбработки];
	
	Возврат МенеджерОбработки.ПолучитьПромпт(ИмяПромпта, Параметры);
	
КонецФункции

#КонецОбласти
