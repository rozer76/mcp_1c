#Область ПрограммныйИнтерфейс

// Возвращает структуру текстового содержимого для MCP
//
// Параметры:
//  Текст - Строка - текстовое содержимое
//
// Возвращаемое значение:
//  Структура - содержит поля:
//   * type - Строка - "text"
//   * text - Строка - текстовое содержимое
//
Функция ТекстовоеСодержимое(Знач Текст) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("type", "text");
	Результат.Вставить("text", Строка(Текст));
	
	Возврат Результат;
	
КонецФункции

// Возвращает структуру текстового содержимого ресурса для MCP
//
// Параметры:
//  Текст - Строка - текстовое содержимое
//  MimeТип - Строка - MIME-тип содержимого, по умолчанию "text/plain"
//
// Возвращаемое значение:
//  Структура - содержит поля:
//   * type - Строка - "text"
//   * text - Строка - текстовое содержимое
//   * mimeType - Строка - MIME-тип содержимого
//
Функция ТекстовоеСодержимоеРесурса(Знач Текст, Знач MimeТип = "text/plain") Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("type", "text");
	Результат.Вставить("text", Строка(Текст));
	Результат.Вставить("mimeType", MimeТип);
	
	Возврат Результат;
	
КонецФункции

// Возвращает структуру содержимого изображения для MCP
//
// Параметры:
//  Данные - Строка, ДвоичныеДанные - данные изображения (строка в base64 или двоичные данные)
//  MimeТип - Строка - MIME-тип изображения (например, "image/png")
//
// Возвращаемое значение:
//  Структура - содержит поля:
//   * type - Строка - "image"
//   * data - Строка - данные изображения в base64
//   * mimeType - Строка - MIME-тип изображения
//
Функция ИзображениеСодержимое(Знач Данные, Знач MimeТип) Экспорт
	
	ДанныеBase64 = "";
	
	Если ТипЗнч(Данные) = Тип("Строка") Тогда
		// Данные уже в формате base64
		ДанныеBase64 = Данные;
	ИначеЕсли ТипЗнч(Данные) = Тип("ДвоичныеДанные") Тогда
		// Преобразуем двоичные данные в base64
		ДанныеBase64 = Base64Строка(Данные);
	Иначе
		ВызватьИсключение СтрШаблон("Неподдерживаемый тип данных для изображения: %1. Ожидается Строка или ДвоичныеДанные", ТипЗнч(Данные));
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("type", "image");
	Результат.Вставить("data", ДанныеBase64);
	Результат.Вставить("mimeType", MimeТип);
	
	Возврат Результат;
	
КонецФункции

// Возвращает структуру двоичного содержимого для MCP
//
// Параметры:
//  Данные - Строка, ДвоичныеДанные - двоичные данные (строка в base64 или двоичные данные)
//  MimeТип - Строка - MIME-тип содержимого
//
// Возвращаемое значение:
//  Структура - содержит поля:
//   * type - Строка - "blob"
//   * blob - Строка - двоичные данные в base64
//   * mimeType - Строка - MIME-тип содержимого
//
Функция ДвоичноеСодержимое(Знач Данные, Знач MimeТип) Экспорт
	
	ДанныеBase64 = "";
	
	Если ТипЗнч(Данные) = Тип("Строка") Тогда
		// Данные уже в формате base64
		ДанныеBase64 = Данные;
	ИначеЕсли ТипЗнч(Данные) = Тип("ДвоичныеДанные") Тогда
		// Преобразуем двоичные данные в base64
		ДанныеBase64 = Base64Строка(Данные);
	Иначе
		ВызватьИсключение СтрШаблон("Неподдерживаемый тип данных для двоичного содержимого: %1. Ожидается Строка или ДвоичныеДанные", ТипЗнч(Данные));
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("type", "blob");
	Результат.Вставить("blob", ДанныеBase64);
	Результат.Вставить("mimeType", MimeТип);
	
	Возврат Результат;
	
КонецФункции

// Возвращает структуру сообщения промпта для MCP
//
// Параметры:
//  Роль - Строка - роль отправителя сообщения ("user", "assistant", "system")
//  Текст - Строка - текст сообщения
//
// Возвращаемое значение:
//  Структура - содержит поля:
//   * role - Строка - роль отправителя
//   * content - Структура - содержимое сообщения с полями type и text
//
Функция СообщениеПромпта(Знач Роль, Знач Текст) Экспорт
	
	СодержимоеСообщения = Новый Структура;
	СодержимоеСообщения.Вставить("type", "text");
	СодержимоеСообщения.Вставить("text", Строка(Текст));
	
	Результат = Новый Структура;
	Результат.Вставить("role", Роль);
	Результат.Вставить("content", СодержимоеСообщения);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
